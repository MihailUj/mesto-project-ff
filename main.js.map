{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/cards.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/utils/utils.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/utils/constants.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["function handlePopup(evt) {\r\n  if (evt.target.classList.contains('popup')\r\n     || evt.target.classList.contains('popup__close')\r\n     || evt.key === 'Escape') {\r\n    closePopup(document.querySelector('.popup_is-opened'));\r\n  }\r\n};\r\n\r\nexport function openPopup(popup){\r\n  popup.classList.add('popup_is-opened');\r\n  popup.addEventListener('click', handlePopup);\r\n  document.addEventListener('keydown', handlePopup);\r\n};\r\n\r\nexport function closePopup(popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  popup.removeEventListener('click', handlePopup);\r\n  document.removeEventListener('keydown', handlePopup);\r\n};","export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];\r\n","let settings;\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(settings.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(settings.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(settings.inputErrorClass);\r\n  errorElement.classList.remove(settings.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, inputElement);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\r\n  const buttonElement = formElement.querySelector(settings.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement);\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  settings = validationConfig;\r\n  const formList = Array.from(document.querySelectorAll(settings.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement);\r\n  });\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  if (hasInvalidInput(inputList)){\r\n    disableButton(buttonElement);\r\n  }\r\n  else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(settings.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nexport const clearValidation = (formElement) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\r\n  const buttonElement = formElement.querySelector(settings.submitButtonSelector);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement)\r\n  });\r\n  disableButton(buttonElement)\r\n};\r\n\r\nconst disableButton = (buttonElement) => {\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(settings.inactiveButtonClass);\r\n}","const cardTemplate = document.querySelector('#card-template').content;\r\n\r\nexport function createCard(card, userId, deleteCard, cardLike, popupImage){\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  cardImage.src = card.link;\r\n  cardImage.alt = card.name;\r\n\r\n  cardImage.addEventListener('click', popupImage);\r\n  cardElement.querySelector('.card__title').textContent = card.name;\r\n  if(card.owner._id === userId) {\r\n    deleteButton.addEventListener('click', deleteCard);\r\n  }\r\n  else {\r\n    deleteButton.classList.add('card__delete-button__disabled');\r\n  }\r\n  likeButton.addEventListener('click', cardLike);\r\n  if (isLiked(card.likes, userId)){\r\n    likeButton.classList.add('card__like-button_is-active');\r\n  }\r\n  cardElement.querySelector('.card__like-counter').textContent = card.likes.length;\r\n  cardElement.dataset.id = card._id;\r\n  return cardElement;\r\n};\r\n\r\nfunction isLiked(likes, userId) {\r\n  return likes.some((user)=> user._id === userId);\r\n}","export function checkResponse(res){\r\n  if (res.ok) {\r\n        return res.json();\r\n      }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n// можно сделать универсальную функцию управления текстом кнопки с 3 и 4 необязательными аргументами\r\nfunction renderLoading(isLoading, button, buttonText='Сохранить', loadingText='Сохранение...') {\r\n  if (isLoading) {\r\n    button.textContent = loadingText\r\n  } else {\r\n    button.textContent = buttonText\r\n  }\r\n}\r\n\r\n// можно сделать универсальную функцию, которая принимает функцию запроса, объект события и текст во время загрузки\r\nexport function handleSubmit(request, evt, loadingText = \"Сохранение...\") {\r\n // всегда нужно предотвращать перезагрузку формы при сабмите\r\n  evt.preventDefault();\r\n\r\n  // универсально получаем кнопку сабмита из `evt`\r\n  const submitButton = evt.submitter;\r\n  // записываем начальный текст кнопки до вызова запроса\r\n  const initialText = submitButton.textContent;\r\n  // изменяем текст кнопки до вызова запроса\r\n  renderLoading(true, submitButton, initialText, loadingText);\r\n  request()\r\n    .then(() => {\r\n      // любую форму нужно очищать после успешного ответа от сервера\r\n      // а также `reset` может запустить деактивацию кнопки сабмита (смотрите в `validate.js`)\r\n      evt.target.reset();\r\n    })\r\n    .catch((err) => {\r\n      // в каждом запросе нужно ловить ошибку\r\n      console.error(`Ошибка: ${err}`);\r\n    })\r\n    // в каждом запросе в `finally` нужно возвращать обратно начальный текст кнопки\r\n    .finally(() => {\r\n      renderLoading(false, submitButton, initialText);\r\n    });\r\n}\r\n","import {checkResponse} from'../utils/utils.js'\r\n\r\nconst config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-38',\r\n  headers: {\r\n    authorization: '426eecea-2bfc-476a-a361-948126a3a9e7',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return request('/cards', {});\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  return request('/users/me', {});\r\n};\r\n\r\nexport const updateUserData = (userData) => {\r\n  return request('/users/me', {\r\n    method: 'PATCH',\r\n    body: JSON.stringify(userData)\r\n  });\r\n};\r\n\r\nexport const postCard = (cardData) => {\r\n  return request('/cards', {\r\n    method: 'POST',\r\n    body: JSON.stringify(cardData)\r\n  });\r\n};\r\n\r\nexport const deleteCard = (cardId) => {\r\n  return request(`/cards/${cardId}`, {\r\n    method: 'DELETE'\r\n  });\r\n};\r\n\r\nexport const likeCard = (cardId) => {\r\n  return request(`/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n  });\r\n}\r\n\r\nexport const dislikeCard = (cardId) => {\r\n  return request(`/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n  });\r\n}\r\n\r\nexport const updateAvatar = (imageUrl) => {\r\n  return request('/users/me/avatar', {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({\r\n          'avatar': imageUrl\r\n    })\r\n  });\r\n}\r\n\r\nfunction request(url, options) {\r\n    options.headers = config.headers;\r\n    return fetch(config.baseUrl+url, options).then(checkResponse)\r\n}","export const validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__input-error_active'\r\n};\r\n\r\nconst content = document.querySelector('.content');\r\nexport const placesList = content.querySelector('.places__list');\r\n\r\nexport const profileEditButton = document.querySelector('.profile__edit-button');\r\nexport const profileAddButton = document.querySelector('.profile__add-button');\r\nexport const avatarEditButton = document.querySelector('.profile__avatar-edit-button');\r\n\r\nexport const popupProfileEdit = document.querySelector('.popup_type_edit');\r\nexport const popupNewCard = document.querySelector('.popup_type_new-card');\r\nexport const popupImage = document.querySelector('.popup_type_image');\r\nexport const popupAvatarEdit = document.querySelector('.popup_type_avatar-edit');\r\n\r\nexport const profileTitle = document.querySelector('.profile__title');\r\nexport const profileDescription = document.querySelector('.profile__description');\r\nexport const profileImage = document.querySelector('.profile__image');\r\n\r\nexport const image = popupImage.querySelector('.popup__image');\r\nexport const caption = popupImage.querySelector('.popup__caption');\r\n\r\nexport const profileForm = document.forms.edit_profile;\r\nexport const newCardForm = document.forms.new_place;\r\nexport const avatarForm = document.forms.edit_avatar;","import './pages/index.css';\r\n\r\nimport {openPopup, closePopup} from './scripts/modal.js';\r\nimport {initialCards} from './scripts/cards.js';\r\nimport {createCard} from './scripts/card.js';\r\nimport {enableValidation, clearValidation} from './scripts/validation.js';\r\nimport {getInitialCards, getCurrentUser, updateUserData, postCard, deleteCard, likeCard, dislikeCard, updateAvatar} from './scripts/api.js';\r\nimport {handleSubmit} from'./utils/utils.js'\r\nimport {validationConfig, placesList, profileEditButton, profileAddButton, avatarEditButton, popupProfileEdit, popupNewCard, popupImage, popupAvatarEdit, profileTitle, profileDescription, profileImage, image, caption, profileForm, newCardForm, avatarForm} from './utils/constants.js'\r\n\r\nlet userId = null;\r\n\r\nenableValidation(validationConfig);\r\n\r\nprofileEditButton.addEventListener('click', handlePopupProfileEdit);\r\nprofileAddButton.addEventListener('click', handlePopupNewCard);\r\navatarEditButton.addEventListener('click', handlePopupAvatarEdit);\r\n\r\nprofileForm.addEventListener('submit', handleProfileFormSubmit);\r\nnewCardForm.addEventListener('submit', handleNewCardFormSubmit);\r\navatarForm.addEventListener('submit', handleAvatarFormSubmit);\r\n\r\n//обработчики открытия модальных окон\r\nfunction handlePopupProfileEdit(evt) {\r\n  profileForm.name.value = profileTitle.textContent;\r\n  profileForm.description.value = profileDescription.textContent;\r\n  clearValidation(profileForm);\r\n  openPopup(popupProfileEdit);\r\n};\r\n\r\nfunction handlePopupNewCard(evt){\r\n  clearValidation(newCardForm);\r\n  openPopup(popupNewCard);\r\n}\r\n\r\nfunction handlePopupImage(evt) {\r\n  image.alt = evt.target.alt;\r\n  image.src = evt.target.currentSrc;\r\n  caption.textContent = evt.target.alt;\r\n  openPopup(popupImage);\r\n};\r\n\r\nfunction handlePopupAvatarEdit(evt) {\r\n  clearValidation(avatarForm);\r\n  openPopup(popupAvatarEdit);\r\n}\r\n\r\n//Обработчики отправки форм\r\nfunction handleProfileFormSubmit(evt) {\r\n  function makeRequest() {\r\n    const userData = {\r\n    name: profileForm.name.value,\r\n    about: profileForm.description.value\r\n    };\r\n    return updateUserData(userData).then((userData) => {\r\n      profileTitle.textContent = userData.name;\r\n      profileDescription.textContent = userData.about;\r\n      closePopup(popupProfileEdit);\r\n    });\r\n  }\r\n  handleSubmit(makeRequest, evt);\r\n};\r\n\r\nfunction handleNewCardFormSubmit(evt) {\r\n  function makeRequest() {\r\n    const card = {\r\n    name: newCardForm.place_name.value,\r\n    link: newCardForm.link.value\r\n    };\r\n    return postCard(card).then((card) => {\r\n      addCard(card);\r\n      closePopup(popupNewCard);\r\n    });\r\n  }\r\n  handleSubmit(makeRequest, evt);\r\n};\r\n\r\nfunction handleAvatarFormSubmit(evt) {\r\n  function makeRequest() {\r\n    return updateAvatar(avatarForm.link.value).then((res) => {\r\n      profileImage.style.backgroundImage = `url(${res.avatar})`;\r\n      closePopup(popupAvatarEdit);\r\n    });\r\n  }\r\n  handleSubmit(makeRequest, evt);\r\n}\r\n\r\nfunction addCard(card){\r\n  const cardElement = createCard(card, userId, handleDeleteCard, handleCardLike, handlePopupImage);\r\n  placesList.prepend(cardElement);\r\n};\r\n\r\nPromise.all([getCurrentUser(), getInitialCards()])\r\n  .then(([userData, cardsData]) => {\r\n    userId = userData._id;\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\r\n    cardsData.forEach(addCard);\r\n  })\r\n  .catch((err) => {\r\n      console.log(err);\r\n  });\r\n\r\nfunction handleDeleteCard(evt){\r\n  const card = evt.target.closest('.places__item');\r\n  deleteCard(card.dataset.id)\r\n  .then((res) => {\r\n    card.remove();\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n};\r\n\r\nfunction handleCardLike(evt){\r\n  const card = evt.target.closest('.places__item');\r\n  const likeCounter = card.querySelector('.card__like-counter');\r\n  const likeButton = evt.target;\r\n  if(!likeButton.classList.contains('card__like-button_is-active')){\r\n    likeCard(card.dataset.id)\r\n    .then((card) => {\r\n      likeCounter.textContent = card.likes.length;\r\n      likeButton.classList.toggle('card__like-button_is-active');\r\n    })\r\n    .catch((err) => {\r\n    console.log(err);\r\n    });\r\n  }\r\n  else {\r\n    dislikeCard(card.dataset.id)\r\n    .then((card) => {\r\n      likeCounter.textContent = card.likes.length;\r\n      likeButton.classList.toggle('card__like-button_is-active');\r\n    })\r\n    .catch((err) => {\r\n    console.log(err);\r\n    });\r\n  }\r\n};"],"names":["handlePopup","evt","target","classList","contains","key","closePopup","document","querySelector","openPopup","popup","add","addEventListener","remove","removeEventListener","settings","cardTemplate","content","hideInputError","formElement","inputElement","errorElement","concat","id","inputErrorClass","errorClass","textContent","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","disableButton","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","checkResponse","res","ok","json","Promise","reject","status","renderLoading","isLoading","button","buttonText","arguments","length","undefined","loadingText","handleSubmit","request","preventDefault","submitButton","submitter","initialText","then","reset","catch","err","console","error","finally","config","authorization","url","options","headers","fetch","placesList","profileEditButton","profileAddButton","avatarEditButton","popupProfileEdit","popupNewCard","popupImage","popupAvatarEdit","profileTitle","profileDescription","profileImage","image","caption","profileForm","forms","edit_profile","newCardForm","new_place","avatarForm","edit_avatar","userId","handlePopupImage","alt","src","currentSrc","addCard","card","cardElement","deleteCard","cardLike","cloneNode","cardImage","deleteButton","likeButton","link","name","owner","_id","likes","user","isLiked","dataset","createCard","handleDeleteCard","handleCardLike","prepend","cardId","closest","method","log","likeCounter","dislikeCard","toggle","formSelector","patternMismatch","setCustomValidity","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","value","description","userData","about","body","JSON","stringify","cardData","place_name","imageUrl","style","backgroundImage","avatar","all","_ref","_ref2","cardsData"],"sourceRoot":""}